#!/usr/bin/env bash

show_usage ()
{
    echo
    echo "Links dotfiles to your $HOME directory"
    echo
    echo "USAGE: $0 [-f] [--force]"
    echo
    echo "  force        Prevents confirmation prompt to override existing files"
    echo

    [ ! -z "$1" ] && exit $1
}

link_dotfiles ()
{
    local FILE

    if [ -z $1 ]; then
        return
    fi

    pushd $1 > /dev/null

    for FILE in .*
    do
        if [[ "$FILE" == "." ]]; then
            continue
        fi

        if [[ "$FILE" == ".." ]]; then
            continue
        fi

        if [[ "$FILE" == ".git" ]]; then
            continue
        fi

        if [[ "$FILE" == ".gitmodules" ]]; then
            continue
        fi

        if [ -e "$FILE" ]
        then
            ln -fsv $PWD/$FILE $HOME/
        fi
    done

    popd > /dev/null
}

if [ "$1" == "--help" ]; then
    show_usage 64
fi;

if [[ "$1" != "--force" && "$1" != "-f" ]]; then
    echo
    read -p "This may overwrite existing files in your home directory. Are you sure? (Y/n) " -n 1
    echo
    case $REPLY in
        "[Nn]*")
            exit 64
            ;;
    esac
fi

# Link dotfiles from this dir
link_dotfiles ${PWD}

# Copy bin files from this dir
if [ -d "./bin" ]; then
    cp -rfv ${PWD}/bin $HOME
fi

# Source platform specific profile
UNAME=$(uname)

case $UNAME in
    "")
        ;;
    "Darwin")
        PLATFORM=osx
        ;;
    "CYGWIN"*)
        PLATFORM=windows
        ;;
    "MINGW"*)
        PLATFORM=windows
        ;;
    *)
        PLATFORM="$(tr [A-Z] [a-z] <<< "$UNAME")"
        ;;
esac

if [ -d "$PLATFORM" ]; then
    pushd $PLATFORM > /dev/null

    # Link dotfiles from platform dir
    link_dotfiles ${PWD}

    # Run setupenv if exists
    if [ -x "./setupenv" ]; then
        ./setupenv
    fi

    # Copy bin files from platform dir
    if [ -d "./bin" ]; then
        cp -rfv ${PWD}/bin $HOME
    fi

    popd > /dev/null
fi